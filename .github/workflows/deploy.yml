name: Deploy Live Search PLP to S3 bucket

on:
  push:
    branches:
      - main  
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write

concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Restore cache
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Build search.js
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: search.js
          path: dist/search.js

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: search.js
          path: dist
      - name: Add search.js to release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: dist/search.js
      - name: Set release path
        id: release-path
        env:
          GITHUB_REF_TYPE: ${{ github.ref_type }}
          PREFIX: /plp
        run: echo "RELEASE_PATH=$PREFIX$([ $GITHUB_REF_TYPE == "branch" ] && echo "/stg")/" >> "$GITHUB_OUTPUT"  
      - name: Upload binary to S3 bucket
        uses: tpaschalis/s3-sync-action@master
        with:
          args: ''
        env:
          FILE: dist/search.js
          AWS_REGION: eu-central-1
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}${{ steps.release-path.outputs.RELEASE_PATH }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
